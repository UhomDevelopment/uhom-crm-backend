openapi: "3.0.1"
info:
  title: Ухом API
  version: "0.0.1 alpha"
paths:
  /ping:
    get:
      summary: Проверка сервера на готовность принимать запросы
      description: |
        Данный эндпоинт позволяет понять, что сервер готов принимать входящие запросы.

        Программа-чекер будет дожидаться первого успешного ответа от сервера на данный эндпоинт, после чего будет запускать проверку тестовый сценариев.
      operationId: ping
      responses:
        "200":
          description: |
            Если сервер успешно отвечает на данный запрос, считается, что он готов обрабатывать входящие запросы в API. 

            Содержимое ответа при этом не валидируется, можно возвращать "ok".
          content:
            text/plain:
              schema:
                type: string
                example: ok
        "500":
          description: Если сервер отвечает любым отличным от 200 кодом ответа, считается, что он не готов принимать запросы.
  /cameras:
    get:
      summary: Получить список камер
      description: |
        Получение списка камеру с возможной фильтрацией по региону.

        Используется для дальнейшего отображения выбора видео и его предпрасмотра.
        Если хотя бы один переданный регион является некорректным, весь запрос считается некорректным.

        Если никакие из фильтров не переданы, необходимо вернуть все камеры.
      operationId: listCountries
      parameters:
        - name: region
          description: |
            Возвращаемые камеры должны относиться только к тем регионам, которые переданы в данном списке.

            Если передан пустой список, считайте, что фильтр по региону отсутствует.

            Как составляется имя фильтра: Первое - имя(Н: WL - Working Line; SH - Storehouse), и индекс фильтрации(Н: 1 - первый корпус)
          in: query
          schema:
            type: array
            example:
              - WL1
              - SH3
      responses:
        "200":
          description: Список камер, соответствующих указанному фильтру. Камеры должны быть отсортированы по индексу фильтрации.
          content:
            application/json:
              schema:
                type: array
                items:
                  - string
        "400":
          description: Формат входного запроса не соответствует формату либо переданы неверные значения.
          content:
            application/json:
              schema:
                type: string
    
  /timecodes:
    get:
      summary: Получить список таймкодов определенной камеры
      description: |
        Получение списка таймкодов определенной камеры.

        Сначало выбирается номер камеры, затем выдаются все таймкоды со всех видео этой камеры. Возможна фильтрация по количеству таймкодов, если ее нет, то вернуть все таймкоды.
      operationId: timecodes
      
      responses:
        "200":
          description: Список таймкодов определенной камеры. Если не передано количество, считайте, что нужно передать все таймкоды.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: integer
                example:
                  - [0.00, 1.12]
                  - [2.01, 5.42]
  /videos:
    get:
      summary: Получить список видео
      description: |
        Получение списка id видео определенной камеры.

        Используется для  выбора видео и его предпрасмотра.
      operationId: videos_get
      
      responses:
        "200":
          description: Список видео, доступных на сервере.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
    post:
      summary: Отправить видео на сервер
      description: |
        Отправление видео на сервер.

        Выбирается номер камеры, и создается уникальный id видео + видео переименовывается в его "[id].mp4".
      operationId: videos_post
       
      responses:
        "201":
          description: Видео загружено на сервер, он присвоен камере. Ему присвоено id.
          content:
            application/video:
              schema:
                type: object
                properties:
                  camera_name:
                    type: integer
                example:
                  {30: "59.mp4"}
